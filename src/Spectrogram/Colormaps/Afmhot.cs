using System;

namespace Spectrogram.Colormaps
{
    class Afmhot : IColormap
    {
        public (byte r, byte g, byte b) GetRGB(byte value)
        {
            byte[] bytes = BitConverter.GetBytes(rgb[value]);
            return (bytes[2], bytes[1], bytes[0]);
        }

        // RGB values are derived from the Afmhot colormap in Matplotlib 3.2.1 (https://matplotlib.org)
        private readonly int[] rgb =
        {
            00000000, 00131072, 00262144, 00393216, 00524288, 00655360, 00786432, 00917504, 
            01048576, 01179648, 01310720, 01441792, 01572864, 01703936, 01835008, 01966080, 
            02097152, 02228224, 02359296, 02490368, 02621440, 02752512, 02883584, 03014656, 
            03145728, 03276800, 03407872, 03538944, 03670016, 03801088, 03932160, 04063232, 
            04194304, 04259840, 04456448, 04587520, 04718592, 04784128, 04980736, 05111808, 
            05242880, 05308416, 05505024, 05636096, 05767168, 05832704, 06029312, 06160384, 
            06291456, 06356992, 06553600, 06684672, 06815744, 06881280, 07077888, 07208960, 
            07340032, 07405568, 07602176, 07733248, 07864320, 07929856, 08126464, 08257536, 
            08388608, 08520192, 08586240, 08783360, 08914944, 09046528, 09178112, 09309696, 
            09441280, 09572864, 09638912, 09836032, 09967616, 10099200, 10230784, 10362368, 
            10493952, 10625536, 10691584, 10888704, 11020288, 11151872, 11283456, 11415040, 
            11546624, 11678208, 11744256, 11941376, 12072960, 12204544, 12336128, 12467712, 
            12599296, 12730880, 12796928, 12994048, 13125632, 13257216, 13388800, 13520384, 
            13651968, 13783552, 13849600, 14046720, 14178304, 14309888, 14441472, 14573056, 
            14704640, 14836224, 14902272, 15099392, 15230976, 15362560, 15494144, 15625728, 
            15757312, 15888896, 15954944, 16152064, 16283648, 16415232, 16546816, 16678400, 
            16744448, 16744962, 16745476, 16745990, 16746504, 16747019, 16747533, 16748047, 
            16748560, 16749074, 16749588, 16750102, 16750617, 16751131, 16751645, 16752159, 
            16752672, 16753186, 16753700, 16754214, 16754728, 16755243, 16755757, 16756271, 
            16756784, 16757298, 16757812, 16758326, 16758841, 16759355, 16759869, 16760383, 
            16760897, 16761410, 16761924, 16762438, 16762952, 16763467, 16763981, 16764495, 
            16765009, 16765522, 16766036, 16766550, 16767065, 16767579, 16768093, 16768607, 
            16769121, 16769634, 16770148, 16770662, 16771176, 16771691, 16772205, 16772719, 
            16773233, 16773746, 16774260, 16774774, 16775289, 16775803, 16776317, 16776831, 
            16777089, 16777091, 16777092, 16777094, 16777096, 16777099, 16777101, 16777103, 
            16777105, 16777107, 16777108, 16777110, 16777113, 16777115, 16777117, 16777119, 
            16777121, 16777123, 16777124, 16777126, 16777128, 16777131, 16777133, 16777135, 
            16777137, 16777139, 16777140, 16777142, 16777145, 16777147, 16777149, 16777151, 
            16777153, 16777155, 16777156, 16777158, 16777160, 16777163, 16777165, 16777167, 
            16777169, 16777171, 16777172, 16777174, 16777177, 16777179, 16777181, 16777183, 
            16777185, 16777187, 16777188, 16777190, 16777192, 16777195, 16777197, 16777199, 
            16777201, 16777203, 16777204, 16777206, 16777209, 16777211, 16777213, 16777215, 
        };
    }
}
