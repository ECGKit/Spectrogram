using System;

namespace Spectrogram.Colormaps
{
    class WinterReversed : IColormap
    {
        public (byte r, byte g, byte b) GetRGB(byte value)
        {
            byte[] bytes = BitConverter.GetBytes(rgb[value]);
            return (bytes[2], bytes[1], bytes[0]);
        }

        // RGB values are derived from the WinterReversed colormap in Matplotlib 3.2.1 (https://matplotlib.org)
        private readonly int[] rgb =
        {
            00065407, 00065152, 00064896, 00064641, 00064385, 00064130, 00063874, 00063619, 
            00063363, 00063108, 00062852, 00062597, 00062341, 00062086, 00061830, 00061575, 
            00061319, 00061064, 00060808, 00060553, 00060297, 00060042, 00059786, 00059531, 
            00059275, 00059020, 00058764, 00058509, 00058253, 00057998, 00057742, 00057487, 
            00057231, 00056976, 00056720, 00056465, 00056209, 00055954, 00055698, 00055443, 
            00055187, 00054931, 00054676, 00054165, 00054165, 00053910, 00053654, 00053399, 
            00053143, 00052888, 00052632, 00052377, 00052121, 00051866, 00051610, 00051355, 
            00051099, 00050844, 00050588, 00050077, 00050077, 00049822, 00049566, 00049311, 
            00049055, 00048800, 00048544, 00048289, 00048033, 00047778, 00047522, 00047267, 
            00047011, 00046755, 00046500, 00045989, 00045989, 00045734, 00045478, 00045223, 
            00044967, 00044712, 00044456, 00044201, 00043945, 00043690, 00043434, 00043179, 
            00042923, 00042668, 00042412, 00041901, 00041901, 00041646, 00041390, 00041135, 
            00040879, 00040624, 00040368, 00040113, 00039857, 00039602, 00039346, 00039091, 
            00038835, 00038579, 00038324, 00037813, 00037813, 00037558, 00037302, 00037047, 
            00036791, 00036536, 00036280, 00036025, 00035769, 00035514, 00035258, 00035003, 
            00034747, 00034492, 00034236, 00033725, 00033725, 00033470, 00033214, 00032959, 
            00032703, 00032448, 00032192, 00031937, 00031681, 00031170, 00031170, 00030915, 
            00030659, 00030403, 00030148, 00029892, 00029381, 00029126, 00029126, 00028871, 
            00028615, 00028360, 00028104, 00027849, 00027593, 00027082, 00027082, 00026827, 
            00026571, 00026316, 00026060, 00025805, 00025293, 00025038, 00025038, 00024783, 
            00024527, 00024272, 00024016, 00023761, 00023505, 00022994, 00022994, 00022739, 
            00022483, 00022227, 00021972, 00021716, 00021205, 00020950, 00020950, 00020695, 
            00020439, 00020184, 00019928, 00019673, 00019417, 00018906, 00018906, 00018651, 
            00018395, 00018140, 00017884, 00017629, 00017117, 00016862, 00016862, 00016607, 
            00016351, 00016096, 00015840, 00015585, 00015329, 00014818, 00014562, 00014563, 
            00014307, 00014051, 00013796, 00013540, 00013029, 00012774, 00012518, 00012519, 
            00012263, 00012008, 00011752, 00011497, 00011241, 00010730, 00010474, 00010475, 
            00010219, 00009964, 00009708, 00009453, 00008941, 00008686, 00008430, 00008431, 
            00008175, 00007920, 00007664, 00007409, 00007153, 00006642, 00006386, 00006387, 
            00006131, 00005875, 00005620, 00005364, 00004853, 00004598, 00004342, 00004343, 
            00004087, 00003832, 00003576, 00003321, 00003065, 00002554, 00002298, 00002299, 
            00002043, 00001788, 00001532, 00001277, 00000765, 00000510, 00000254, 00000255, 
        };
    }
}
