using System;

namespace Spectrogram.Colormaps
{
    class Gnuplot : IColormap
    {
        public (byte r, byte g, byte b) GetRGB(byte value)
        {
            byte[] bytes = BitConverter.GetBytes(rgb[value]);
            return (bytes[2], bytes[1], bytes[0]);
        }

        // RGB values are derived from the Gnuplot colormap in Matplotlib 3.2.1 (https://matplotlib.org)
        private readonly int[] rgb =
        {
            00000000, 00983046, 01441804, 01769490, 02031641, 02293791, 02555941, 02752555, 
            02949169, 03080248, 03276862, 03407940, 03604554, 03735632, 03866710, 03997788, 
            04128865, 04259943, 04391021, 04522099, 04653176, 04784254, 04849795, 04980872, 
            05111950, 05177491, 05308568, 05374109, 05505186, 05570727, 05701803, 05767344, 
            05898420, 05963961, 06095037, 06160577, 06226117, 06357193, 06422733, 06488273, 
            06553812, 06685143, 06750683, 06816222, 06881761, 07012836, 07078374, 07143913, 
            07209452, 07274990, 07340528, 07471858, 07537396, 07602934, 07668471, 07734009, 
            07799546, 07865083, 07930876, 07996413, 08061949, 08127486, 08193022, 08258558, 
            08324350, 08389886, 08455422, 08520958, 08586493, 08652284, 08717819, 08783354, 
            08848889, 08914424, 08980214, 09045749, 09111283, 09177073, 09242607, 09242605, 
            09308138, 09373928, 09439461, 09504994, 09570783, 09636316, 09701849, 09702102, 
            09767634, 09833167, 09898955, 09964487, 10030019, 10030271, 10095803, 10161591, 
            10227122, 10292910, 10358441, 10358436, 10424223, 10489754, 10555541, 10621072, 
            10621323, 10686854, 10752640, 10818171, 10818421, 10883952, 10949738, 11015524, 
            11015519, 11081305, 11146835, 11212621, 11212871, 11278401, 11344187, 11409717, 
            11409966, 11475752, 11541282, 11607068, 11607317, 11673103, 11738633, 11738883, 
            11804672, 11870464, 11936000, 11936256, 12002048, 12067840, 12068096, 12133632, 
            12199424, 12199680, 12265472, 12331264, 12331520, 12397312, 12463104, 12463104, 
            12528896, 12594688, 12594944, 12660736, 12726528, 12726784, 12792576, 12858368, 
            12858880, 12924672, 12990464, 12990720, 13056512, 13122304, 13122560, 13188352, 
            13188608, 13254656, 13320448, 13320704, 13386496, 13452544, 13452800, 13518592, 
            13518848, 13584896, 13650688, 13650944, 13716992, 13782784, 13783296, 13849088, 
            13849344, 13915392, 13981184, 13981696, 14047488, 14048000, 14113792, 14179840, 
            14180096, 14246144, 14246400, 14312448, 14312960, 14378752, 14444800, 14445312, 
            14511104, 14511616, 14577664, 14578176, 14643968, 14710016, 14710528, 14776576, 
            14777088, 14842880, 14843392, 14909440, 14975488, 14976000, 15042048, 15042560, 
            15108608, 15109120, 15175168, 15175680, 15241728, 15307776, 15308288, 15374336, 
            15374848, 15441152, 15441664, 15507712, 15508224, 15574272, 15575040, 15641088, 
            15641600, 15707904, 15773952, 15774464, 15840768, 15841280, 15907584, 15908096, 
            15974400, 15974912, 16041216, 16041728, 16108032, 16108544, 16174848, 16175360, 
            16241664, 16242432, 16308480, 16309248, 16375552, 16376320, 16442368, 16443136, 
            16509440, 16510208, 16576512, 16577280, 16643584, 16644352, 16710656, 16776960, 
        };
    }
}
