using System;

namespace Spectrogram.Colormaps
{
    class PurplesReversed : IColormap
    {
        public (byte r, byte g, byte b) GetRGB(byte value)
        {
            byte[] bytes = BitConverter.GetBytes(rgb[value]);
            return (bytes[2], bytes[1], bytes[0]);
        }

        // RGB values are derived from the PurplesReversed colormap in Matplotlib 3.2.1 (https://matplotlib.org)
        private readonly int[] rgb =
        {
            04128893, 04129149, 04194942, 04195198, 04260991, 04327039, 04327296, 04393088, 
            04458881, 04459394, 04525186, 04590979, 04591235, 04657028, 04723076, 04723333, 
            04789126, 04854918, 04855431, 04921223, 04987016, 04987272, 05053065, 05119113, 
            05119370, 05185163, 05250955, 05251468, 05317260, 05383053, 05383309, 05449102, 
            05515151, 05515407, 05581200, 05647248, 05647505, 05713298, 05779346, 05779603, 
            05845396, 05911444, 05911701, 05977493, 06043286, 06109335, 06109591, 06175384, 
            06241433, 06241689, 06307482, 06373531, 06373787, 06439580, 06505628, 06505885, 
            06571678, 06637726, 06703519, 06703776, 06769824, 06835617, 06835873, 06901922, 
            06967715, 06967971, 07034020, 07099813, 07100070, 07166118, 07231911, 07297960, 
            07298216, 07364009, 07430058, 07430315, 07496107, 07562156, 07562413, 07628462, 
            07694254, 07694511, 07760560, 07826352, 07826609, 07892658, 07958451, 08024499, 
            08024756, 08090549, 08156597, 08156854, 08222647, 08288696, 08288952, 08355001, 
            08420794, 08486586, 08552379, 08618171, 08683707, 08749500, 08815292, 08815549, 
            08881341, 08947134, 09012926, 09078718, 09144511, 09210303, 09276096, 09341632, 
            09407425, 09473217, 09539010, 09604802, 09670594, 09736387, 09802179, 09867972, 
            09868228, 09934021, 09999557, 10065350, 10131142, 10196934, 10262727, 10328519, 
            10394312, 10460104, 10525897, 10591690, 10657482, 10723531, 10789324, 10855116, 
            10920909, 10921165, 10986958, 11052751, 11118543, 11184336, 11250129, 11316177, 
            11381970, 11447762, 11513555, 11579348, 11645140, 11710933, 11776726, 11842518, 
            11908311, 11974360, 11974616, 12040409, 12106201, 12171994, 12237787, 12303579, 
            12369372, 12435164, 12500957, 12566749, 12632542, 12698334, 12764127, 12829663, 
            12895456, 12961248, 13027041, 13027297, 13093089, 13158882, 13224674, 13290467, 
            13356259, 13422052, 13487588, 13553381, 13619173, 13684966, 13750758, 13816551, 
            13882343, 13948136, 14013928, 14079721, 14079977, 14145513, 14211306, 14277098, 
            14342891, 14408683, 14408683, 14474476, 14540012, 14540268, 14606061, 14671597, 
            14671853, 14737390, 14803182, 14803438, 14868975, 14934767, 14934767, 15000559, 
            15066096, 15066352, 15132144, 15197681, 15197937, 15263473, 15263730, 15329522, 
            15395058, 15395315, 15460851, 15526643, 15526900, 15592436, 15658228, 15658228, 
            15724021, 15724021, 15789813, 15789813, 15790070, 15855606, 15855862, 15921398, 
            15921399, 15987191, 15987191, 15987447, 16052984, 16053240, 16118776, 16118776, 
            16119033, 16184569, 16184825, 16250361, 16250618, 16250618, 16316410, 16316410, 
            16381947, 16382203, 16382203, 16447995, 16447996, 16513788, 16513788, 16579581, 
        };
    }
}
