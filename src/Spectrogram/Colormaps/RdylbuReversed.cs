using System;

namespace Spectrogram.Colormaps
{
    class RdylbuReversed : IColormap
    {
        public (byte r, byte g, byte b) GetRGB(byte value)
        {
            byte[] bytes = BitConverter.GetBytes(rgb[value]);
            return (bytes[2], bytes[1], bytes[0]);
        }

        // RGB values are derived from the RdylbuReversed colormap in Matplotlib 3.2.1 (https://matplotlib.org)
        private readonly int[] rgb =
        {
            03225237, 03225750, 03291799, 03358104, 03424153, 03424923, 03490972, 03557277, 
            03623326, 03689631, 03690145, 03756450, 03822499, 03888804, 03889318, 03955623, 
            04021672, 04087977, 04154026, 04154540, 04220845, 04286894, 04353199, 04419248, 
            04420018, 04486067, 04552372, 04683957, 04815542, 04947127, 05078713, 05210554, 
            05276603, 05408188, 05539773, 05671358, 05803199, 05934785, 06066370, 06132419, 
            06264004, 06395845, 06527430, 06659015, 06790601, 06856650, 06988491, 07120076, 
            07251661, 07383246, 07514831, 07646673, 07778001, 07909586, 08041171, 08172500, 
            08304085, 08435670, 08632791, 08764120, 08895705, 09027290, 09158619, 09290204, 
            09487325, 09618910, 09750239, 09881824, 10013409, 10144993, 10276322, 10473443, 
            10605028, 10736357, 10867942, 10999527, 11131112, 11327977, 11459305, 11590634, 
            11721963, 11853291, 11984620, 12115948, 12247277, 12378606, 12509934, 12641263, 
            12772591, 12903920, 13100784, 13232113, 13363442, 13494770, 13626099, 13757427, 
            13888756, 14020085, 14151413, 14282742, 14414070, 14545399, 14742519, 14808053, 
            14873587, 14939377, 15004911, 15136236, 15201770, 15267560, 15333094, 15398883, 
            15529953, 15595743, 15661277, 15727066, 15858136, 15923926, 15989460, 16055250, 
            16120783, 16251853, 16317643, 16383177, 16448966, 16514500, 16645826, 16711360, 
            16711358, 16711100, 16710586, 16710328, 16710070, 16709812, 16709555, 16709041, 
            16708783, 16708525, 16708267, 16708009, 16707495, 16707238, 16706980, 16706722, 
            16706208, 16705950, 16705692, 16705435, 16705177, 16704663, 16704405, 16704147, 
            16703889, 16703632, 16637582, 16637068, 16636554, 16636040, 16635526, 16635012, 
            16634499, 16633985, 16633471, 16632957, 16632443, 16631929, 16631416, 16630902, 
            16630388, 16629874, 16629360, 16628846, 16628332, 16627819, 16627305, 16626791, 
            16626277, 16625763, 16625249, 16559200, 16558687, 16557918, 16491868, 16491099, 
            16490330, 16424281, 16423512, 16422999, 16356693, 16356180, 16289875, 16289362, 
            16288593, 16222543, 16221774, 16221005, 16154956, 16154187, 16153674, 16087368, 
            16086855, 16086086, 16020037, 16019268, 16018755, 15886913, 15820864, 15754559, 
            15688510, 15622461, 15556156, 15490107, 15358266, 15292217, 15226168, 15159862, 
            15093813, 15027508, 14961459, 14829874, 14763569, 14697520, 14631215, 14565166, 
            14499117, 14432811, 14301226, 14234921, 14168872, 14102823, 14036774, 13905190, 
            13773606, 13642022, 13510438, 13378854, 13247270, 13115686, 12984358, 12852774, 
            12721190, 12589606, 12458022, 12326438, 12194854, 12063270, 11931686, 11800358, 
            11668774, 11537190, 11405606, 11274022, 11142438, 11010854, 10879270, 10813478, 
        };
    }
}
