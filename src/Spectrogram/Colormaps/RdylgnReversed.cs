using System;

namespace Spectrogram.Colormaps
{
    class RdylgnReversed : IColormap
    {
        public (byte r, byte g, byte b) GetRGB(byte value)
        {
            byte[] bytes = BitConverter.GetBytes(rgb[value]);
            return (bytes[2], bytes[1], bytes[0]);
        }

        // RGB values are derived from the RdylgnReversed colormap in Matplotlib 3.2.1 (https://matplotlib.org)
        private readonly int[] rgb =
        {
            00026679, 00092471, 00158520, 00224569, 00290618, 00356667, 00422716, 00488765, 
            00554814, 00620607, 00686656, 00752705, 00818754, 00884803, 00950852, 01016901, 
            01082950, 01148999, 01214792, 01280841, 01346890, 01412939, 01478988, 01545037, 
            01611086, 01677135, 01808464, 02005585, 02202449, 02399570, 02596435, 02793300, 
            02990420, 03187285, 03384406, 03581271, 03778391, 03975256, 04172377, 04369242, 
            04566362, 04763227, 04960092, 05157213, 05354077, 05551198, 05748063, 05945184, 
            06142048, 06339169, 06536034, 06733155, 06864483, 07061347, 07192675, 07389540, 
            07520868, 07717732, 07849060, 08045925, 08177253, 08374117, 08505702, 08702566, 
            08833894, 09030758, 09162087, 09358951, 09490279, 09687143, 09818472, 10015336, 
            10146920, 10343785, 10475113, 10671977, 10803305, 11000170, 11131499, 11262829, 
            11394158, 11525231, 11656561, 11787890, 11919219, 12050549, 12181878, 12313207, 
            12444280, 12575610, 12706939, 12838268, 12969598, 13100927, 13232256, 13363329, 
            13494659, 13625988, 13757317, 13888647, 14019976, 14151305, 14282635, 14348173, 
            14413967, 14545041, 14610835, 14742165, 14807703, 14939033, 15004827, 15135901, 
            15201695, 15332769, 15398563, 15529893, 15595431, 15726761, 15792555, 15923629, 
            15989423, 16120497, 16186291, 16317621, 16383159, 16514489, 16580283, 16711357, 
            16711357, 16711099, 16710585, 16710327, 16710069, 16709811, 16709553, 16709039, 
            16708781, 16708523, 16708265, 16708007, 16707493, 16707235, 16706977, 16706719, 
            16706205, 16705947, 16705689, 16705431, 16705173, 16704659, 16704401, 16704143, 
            16703885, 16703627, 16637577, 16637063, 16636550, 16636036, 16635522, 16635009, 
            16634495, 16633981, 16633468, 16632954, 16632440, 16631927, 16631413, 16630899, 
            16630386, 16629872, 16629359, 16628845, 16628331, 16627818, 16627304, 16626790, 
            16626277, 16625763, 16625249, 16559200, 16558687, 16557918, 16491868, 16491099, 
            16490330, 16424281, 16423512, 16422999, 16356693, 16356180, 16289875, 16289362, 
            16288593, 16222543, 16221774, 16221005, 16154956, 16154187, 16153674, 16087368, 
            16086855, 16086086, 16020037, 16019268, 16018755, 15886913, 15820864, 15754559, 
            15688510, 15622461, 15556156, 15490107, 15358266, 15292217, 15226168, 15159862, 
            15093813, 15027508, 14961459, 14829874, 14763569, 14697520, 14631215, 14565166, 
            14499117, 14432811, 14301226, 14234921, 14168872, 14102823, 14036774, 13905190, 
            13773606, 13642022, 13510438, 13378854, 13247270, 13115686, 12984358, 12852774, 
            12721190, 12589606, 12458022, 12326438, 12194854, 12063270, 11931686, 11800358, 
            11668774, 11537190, 11405606, 11274022, 11142438, 11010854, 10879270, 10813478, 
        };
    }
}
