using System;

namespace Spectrogram.Colormaps
{
    class Pink : IColormap
    {
        public (byte r, byte g, byte b) GetRGB(byte value)
        {
            byte[] bytes = BitConverter.GetBytes(rgb[value]);
            return (bytes[2], bytes[1], bytes[0]);
        }

        // RGB values are derived from the Pink colormap in Matplotlib 3.2.1 (https://matplotlib.org)
        private readonly int[] rgb =
        {
            01966080, 02229766, 02558988, 02888467, 03217689, 03480604, 03677983, 03940898, 
            04138020, 04335142, 04532521, 04729643, 04861229, 05058094, 05189680, 05386802, 
            05518388, 05715253, 05846839, 05978168, 06109754, 06241083, 06372669, 06503998, 
            06635327, 06766913, 06898242, 07029571, 07160900, 07226950, 07358279, 07489608, 
            07620937, 07686730, 07818059, 07949645, 08015438, 08146767, 08212560, 08343889, 
            08409682, 08541011, 08606804, 08738133, 08803926, 08935255, 09001048, 09132377, 
            09198170, 09263963, 09395292, 09461085, 09592414, 09657950, 09723743, 09855072, 
            09920865, 09986658, 10052451, 10183780, 10249316, 10315109, 10380902, 10512231, 
            10578024, 10643817, 10709353, 10840682, 10906475, 10972268, 11038061, 11103597, 
            11169390, 11300719, 11366512, 11432048, 11497841, 11563634, 11629427, 11694963, 
            11760756, 11826549, 11957878, 12023414, 12089207, 12155000, 12220536, 12286329, 
            12352122, 12417915, 12483451, 12549244, 12615037, 12680573, 12746622, 12746879, 
            12747391, 12813184, 12813697, 12879489, 12880002, 12945795, 12946307, 12946564, 
            13012356, 13012869, 13078662, 13078918, 13144967, 13145224, 13145480, 13211529, 
            13211785, 13277578, 13278091, 13343883, 13344140, 13344397, 13410445, 13410702, 
            13476494, 13476751, 13477008, 13543056, 13543313, 13609105, 13609362, 13675154, 
            13675411, 13675924, 13741716, 13741973, 13807765, 13808022, 13808278, 13874071, 
            13874328, 13940120, 13940377, 13940889, 14006682, 14006938, 14072731, 14072987, 
            14073244, 14139037, 14139293, 14205086, 14205342, 14205599, 14271391, 14271648, 
            14271904, 14337697, 14337953, 14403746, 14404002, 14404259, 14470051, 14470308, 
            14536100, 14536357, 14536613, 14602406, 14602662, 14602663, 14668455, 14668712, 
            14734504, 14734761, 14735018, 14800810, 14801066, 14866859, 14867115, 14867372, 
            14933164, 14933165, 14933421, 14999214, 14999470, 15065263, 15065519, 15065776, 
            15131568, 15131569, 15131825, 15197618, 15197874, 15198131, 15263923, 15263924, 
            15329718, 15329719, 15329721, 15395514, 15395515, 15395517, 15461310, 15461311, 
            15461313, 15527106, 15527107, 15592900, 15592902, 15592903, 15658696, 15658697, 
            15658699, 15724492, 15724493, 15724494, 15790288, 15790289, 15790290, 15856083, 
            15856084, 15921878, 15921879, 15921880, 15987673, 15987674, 15987675, 16053469, 
            16053470, 16053471, 16119264, 16119265, 16119266, 16185059, 16185060, 16185062, 
            16250855, 16250856, 16250857, 16316650, 16316651, 16316652, 16382445, 16382446, 
            16382447, 16448240, 16448241, 16448242, 16514035, 16514036, 16514037, 16579830, 
            16579831, 16579832, 16645625, 16645627, 16645628, 16711421, 16711422, 16777215, 
        };
    }
}
