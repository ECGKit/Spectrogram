trigger:
- master

strategy:
  matrix:

    'Build and Test on MacOS':
      purpose: 'library'
      imageName: 'macOS-latest'

    'Build and Test on Linux':
      purpose: 'library'
      imageName: 'ubuntu-latest'

    'Build and Test on Windows':
      purpose: 'library'
      imageName: 'windows-latest'

    'Rebuild Solution on Windows':
      purpose: 'solution'
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:

### INSTALL NUGET AND RESTORE PACKAGES

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'
    
- task: NuGetCommand@2
  displayName: 'Restore packages'
  inputs:
    restoreSolution: 'src/Spectrogram.sln'

### BUILD THE CORE LIBRARY AND RUN TESTS

- task: DotNetCoreCLI@2
  displayName: 'Build Spectrogram'
  condition: eq(variables['purpose'], 'library')
  inputs:
    command: 'build'
    projects: 'src/Spectrogram/Spectrogram.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build Tests'
  condition: eq(variables['purpose'], 'library')
  inputs:
    command: 'build'
    projects: 'src/Spectrogram.Tests/Spectrogram.Tests.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  condition: eq(variables['purpose'], 'library')
  inputs:
    command: test
    projects: 'src/Spectrogram.Tests/Spectrogram.Tests.csproj'

### REBUILD FULL SOLUTION
    
- task: VSBuild@1
  displayName: 'Build Release (Windows)'
  condition: eq(variables['purpose'], 'solution')
  inputs:
    solution: 'src/Spectrogram.sln'
    configuration: 'release'